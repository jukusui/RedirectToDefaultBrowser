//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Shared.Properties {
    using System;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバーを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class DocumentResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal DocumentResources() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Shared.Properties.DocumentResources", typeof(DocumentResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   すべてについて、現在のスレッドの CurrentUICulture プロパティをオーバーライドします
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   On this app, two types of &quot;microsoft-edge&quot; scheme URIs are supported.  One is one URL is directly written type(eg:&quot;[microsoft-edge:http://example.com](*microsoft-edge:http://example.com)&quot;).  The other is URL parametered URI(eg:&quot;[microsoft-edge:?url=https%3A%2F%2Fexample.com](*microsoft-edge:?url=https%3A%2F%2Fexample.com)&quot;).  If you found other type of &quot;microsoft-edge&quot; scheme, please tell me! に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AboutEdgeScheme {
            get {
                return ResourceManager.GetString("AboutEdgeScheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   On redirect program, multiple replaces are applied by order(up-to-down), and URL format validation will be applied per redirect replace.  So, if you remove http[s] first(&quot;https?&quot;→&quot;&quot;), and insert https after the replace(&quot;^&quot;→&quot;https&quot;), the result will valid URL but rejects the replace on the first replace(by empty scheme error).  This behavior is design for detecting such destructively replace. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AboutRedirectSetting {
            get {
                return ResourceManager.GetString("AboutRedirectSetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The replace will be applied according to RegEx(Regular Expression).  RegEx is a string expression for search or replace multiple character or long character (and so on).  For more information, you can see [microsoft&apos;s documentation](https://docs.microsoft.com/dotnet/standard/base-types/regular-expressions). に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AboutRegex {
            get {
                return ResourceManager.GetString("AboutRegex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   [Open app list of this computer](ms-settings:appsfeatures-app).  You can remove or reset this app. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string AppList {
            get {
                return ResourceManager.GetString("AppList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If the redirect doesn’t work, you can chose the default app of &quot;microsoft-edge&quot; scheme.  You need configure this default app to this app &quot;RedirectToDefaultBrowser&quot;.  If you want to configure, [open selector](*microsoft-edge:) and chose this app with &quot;always use&quot; setting.  If it doesn&apos;t work, [open settings](ms-settings:defaultapps), select &quot;default app of protocol&quot;, and chose &quot;MICROSOFT-EDGE&quot; &apos;s app to this app.  In some launcher app (eg: old version of Cortana), default app setting won’t change until machi [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DefaultApp {
            get {
                return ResourceManager.GetString("DefaultApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If you encounter some issue, you can report it on GitHub.  Basically, please use GitHub or Feedback Hub on reporting issues.  But I accept other means such as my SNS accounts and Windows Store. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Issue {
            get {
                return ResourceManager.GetString("Issue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   [Open this app&apos;s Windows Store Page](ms-windows-store://pdp/?ProductId=9N86NDB1C3MP). に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string StoreApp {
            get {
                return ResourceManager.GetString("StoreApp", resourceCulture);
            }
        }
    }
}
